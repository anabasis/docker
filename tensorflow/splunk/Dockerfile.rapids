# Start from base image: basic linux or nvidia-cuda
ARG BASE_IMAGE
FROM ${BASE_IMAGE}
ARG TAG

USER root
#RUN conda config --set allow_conda_downgrades true
# Install basic frameworks
# RUN conda install -n rapids jupyterlab nb_conda flask waitress -c anaconda -c rapidsai -c conda-forge
# nodejs datashader tensorflow-gpu pytorch
RUN conda install -n rapids jupyterlab nb_conda flask waitress

#RUN conda install -n rapids -c rapidsai jupyterlab-nvdashboard 
#RUN jupyter labextension install jupyterlab-nvdashboard
# Setup jupyter lab extensions
#RUN conda install -n rapids -c conda-forge dask-labextension
#RUN jupyter labextension install dask-labextension
#RUN jupyter serverextension enable --py --sys-prefix dask_labextension --user

#RUN pip install jupyter-tensorboard
#RUN jupyter labextension install jupyterlab_tensorboard
#RUN jupyter serverextension enable --py --sys-prefix jupyter_tensorboard
#RUN jupyter tensorboard enable --user 

RUN mkdir /dltk
# Define working directory
WORKDIR /srv

# Copy bootstrap entry point script
COPY bootstrap_rapids.sh /dltk/
COPY app /dltk/app
COPY notebooks /dltk/notebooks

# Copy jupyter config
COPY config/jupyter_notebook_config.py /dltk/.jupyter/jupyter_notebook_config.py
# Copy jupyter notebook conversion template to export python module
COPY config/jupyter_notebook_conversion.tpl /dltk/.jupyter/jupyter_notebook_conversion.tpl

# Handle user rights
RUN chgrp -R 0 /dltk && \
    chmod -R g=u /dltk
RUN chgrp -R 0 /srv && \
    chmod -R g=u /srv
RUN chmod g+w /etc/passwd
USER 1001

# Expose container port 5000 (MLTK Container Service) and 8888 (Notebook) and 6006 (Tensorboard)
EXPOSE 5000 8888 6006

# Define bootstrap as entry point to start container
ENTRYPOINT ["/dltk/bootstrap_rapids.sh"]
